{"version":3,"sources":["misc/helpers.js","context/profile.context.js","components/PrivateRoute.js","misc/custom-hooks.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/CreateRoomBtnModal.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/SendFcmBtnModal.js","components/chat-window/top/AskFcmBtnModal.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PublicRoute.js","components/ErrorBoundary.js","App.js","index.js","misc/firebase.js"],"names":["getNameInitials","name","splitName","toUpperCase","split","length","transformToArr","snapVal","Object","keys","transformToArrWithId","map","roomId","id","getUserUpdates","userId","keyToUpdate","value","db","a","updates","getMsgs","ref","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","groupBy","array","groupingKeyFn","reduce","result","item","groupingKey","push","isLocalhost","Boolean","window","location","hostname","match","isOfflineForDatabase","state","last_changed","firebase","database","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","tokenRefreshUnsub","authUnsub","auth","onAuthStateChanged","authObj","uid","on","snap","val","data","createdAt","avatar","email","snapshot","onDisconnect","set","then","messaging","getToken","currentToken","console","log","onTokenRefresh","off","Provider","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","Alert","info","className","InputGroup","Input","disabled","onChange","Button","onClick","Icon","icon","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","Error","error","message","link","provider","linkWithPopup","Tag","color","closable","onClose","block","GoogleAuthProvider","FacebookAuthProvider","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","useRef","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","storage","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomdata","admins","fcmUsers","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomItem","room","lastMessage","datetime","Date","author","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","memo","v","chatId","useParams","updateData","newName","newDesc","title","SendFcmBtnModal","sendFcm","functions","httpsCallable","AskFcmBtnModal","isReceivingFcm","IconButton","backdrop","Notification","permission","remove","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","ImgBtnModal","fileName","alt","href","rel","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","controls","renderFileMessage","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","percentage","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groups","toDateString","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","PublicRoute","ErrorBoundary","errorInfo","this","setState","whiteSpace","toString","componentStack","React","Component","SignIn","lazy","App","fallback","ReactDOM","render","document","getElementById","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","isSupported","usePublicVapidKey","onMessage","notification","body","Toast","duration","useFunctionsEmulator"],"mappings":"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","file":"static/js/main.8292d13b.chunk.js","sourcesContent":["export function getNameInitials(name) {\n  const splitName = name.toUpperCase().split(' ');\n\n  if (splitName.length > 1) {\n    return splitName[0][0] + splitName[1][0];\n  }\n\n  return splitName[0][0];\n}\n\nexport function transformToArr(snapVal) {\n  return snapVal ? Object.keys(snapVal) : [];\n}\n\nexport function transformToArrWithId(snapVal) {\n  return snapVal\n    ? Object.keys(snapVal).map(roomId => {\n        return { ...snapVal[roomId], id: roomId };\n      })\n    : [];\n}\n\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\n  const updates = {};\n\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\n\n  const getMsgs = db\n    .ref('/messages')\n    .orderByChild('author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const getRooms = db\n    .ref('/rooms')\n    .orderByChild('lastMessage/author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\n\n  mSnap.forEach(msgSnap => {\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\n  });\n\n  rSnap.forEach(roomSnap => {\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\n  });\n\n  return updates;\n}\n\nexport function groupBy(array, groupingKeyFn) {\n  return array.reduce((result, item) => {\n    const groupingKey = groupingKeyFn(item);\n\n    if (!result[groupingKey]) {\n      result[groupingKey] = [];\n    }\n\n    result[groupingKey].push(item);\n\n    return result;\n  }, {});\n}\n\nexport const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { auth, database, messaging } from '../misc/firebase';\n\nexport const isOfflineForDatabase = {\n  state: 'offline',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst isOnlineForDatabase = {\n  state: 'online',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst ProfileContext = createContext();\n\nexport const ProfileProvider = ({ children }) => {\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let userRef;\n    let userStatusRef;\n    let tokenRefreshUnsub;\n\n    const authUnsub = auth.onAuthStateChanged(async authObj => {\n      if (authObj) {\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\n        userRef = database.ref(`/profiles/${authObj.uid}`);\n\n        userRef.on('value', snap => {\n          const { name, createdAt, avatar } = snap.val();\n\n          const data = {\n            name,\n            createdAt,\n            avatar,\n            uid: authObj.uid,\n            email: authObj.email,\n          };\n\n          setProfile(data);\n          setIsLoading(false);\n        });\n\n        database.ref('.info/connected').on('value', snapshot => {\n          if (!!snapshot.val() === false) {\n            return;\n          }\n\n          userStatusRef\n            .onDisconnect()\n            .set(isOfflineForDatabase)\n            .then(() => {\n              userStatusRef.set(isOnlineForDatabase);\n            });\n        });\n\n        if (messaging) {\n          try {\n            const currentToken = await messaging.getToken();\n            if (currentToken) {\n              await database\n                .ref(`/fcm_tokens/${currentToken}`)\n                .set(authObj.uid);\n            }\n          } catch (err) {\n            // eslint-disable-next-line no-console\n            console.log('An error occurred while retrieving token. ', err);\n          }\n\n          tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\n            try {\n              const currentToken = await messaging.getToken();\n              if (currentToken) {\n                await database\n                  .ref(`/fcm_tokens/${currentToken}`)\n                  .set(authObj.uid);\n              }\n            } catch (err) {\n              // eslint-disable-next-line no-console\n              console.log('An error occurred while retrieving token. ', err);\n            }\n          });\n        }\n      } else {\n        if (userRef) {\n          userRef.off();\n        }\n\n        if (userStatusRef) {\n          userStatusRef.off();\n        }\n\n        if (tokenRefreshUnsub) {\n          tokenRefreshUnsub();\n        }\n\n        database.ref('.info/connected').off();\n\n        setProfile(null);\n        setIsLoading(false);\n      }\n    });\n\n    return () => {\n      authUnsub();\n\n      database.ref('.info/connected').off();\n\n      if (userRef) {\n        userRef.off();\n      }\n\n      if (tokenRefreshUnsub) {\n        tokenRefreshUnsub();\n      }\n\n      if (userStatusRef) {\n        userStatusRef.off();\n      }\n    };\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={{ isLoading, profile }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => useContext(ProfileContext);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PrivateRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (!profile && !isLoading) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PrivateRoute;\n","import { useState, useCallback, useEffect, useRef } from 'react';\nimport { database } from './firebase';\n\nexport function useModalState(defaultValue = false) {\n  const [isOpen, setIsOpen] = useState(defaultValue);\n\n  const open = useCallback(() => setIsOpen(true), []);\n  const close = useCallback(() => setIsOpen(false), []);\n\n  return { isOpen, open, close };\n}\n\nexport const useMediaQuery = query => {\n  const [matches, setMatches] = useState(\n    () => window.matchMedia(query).matches\n  );\n\n  useEffect(() => {\n    const queryList = window.matchMedia(query);\n    setMatches(queryList.matches);\n\n    const listener = evt => setMatches(evt.matches);\n\n    queryList.addListener(listener);\n    return () => queryList.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport function usePresence(uid) {\n  const [presence, setPresence] = useState(null);\n\n  useEffect(() => {\n    const userStatusRef = database.ref(`/status/${uid}`);\n\n    userStatusRef.on('value', snap => {\n      if (snap.exists()) {\n        const data = snap.val();\n\n        setPresence(data);\n      }\n    });\n\n    return () => {\n      userStatusRef.off();\n    };\n  }, [uid]);\n\n  return presence;\n}\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n      }\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n","import React, { useState, useCallback } from 'react';\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\n\nconst EditableInput = ({\n  initialValue,\n  onSave,\n  label = null,\n  placeholder = 'Write your value',\n  emptyMsg = 'Input is empty',\n  wrapperClassName = '',\n  ...inputProps\n}) => {\n  const [input, setInput] = useState(initialValue);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onEditClick = useCallback(() => {\n    setIsEditable(p => !p);\n    setInput(initialValue);\n  }, [initialValue]);\n\n  const onSaveClick = async () => {\n    const trimmed = input.trim();\n\n    if (trimmed === '') {\n      Alert.info(emptyMsg, 4000);\n    }\n\n    if (trimmed !== initialValue) {\n      await onSave(trimmed);\n    }\n\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={wrapperClassName}>\n      {label}\n      <InputGroup>\n        <Input\n          {...inputProps}\n          disabled={!isEditable}\n          placeholder={placeholder}\n          value={input}\n          onChange={onInputChange}\n        />\n        <InputGroup.Button onClick={onEditClick}>\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\n        </InputGroup.Button>\n        {isEditable && (\n          <InputGroup.Button onClick={onSaveClick}>\n            <Icon icon=\"check\" />\n          </InputGroup.Button>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default EditableInput;\n","import React, { useState } from 'react';\nimport { Tag, Icon, Button, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { auth } from '../../misc/firebase';\n\nconst ProviderBlock = () => {\n  const [isConnected, setIsConnected] = useState({\n    'google.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'google.com'\n    ),\n    'facebook.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'facebook.com'\n    ),\n  });\n\n  const updateIsConnected = (providerId, value) => {\n    setIsConnected(p => {\n      return {\n        ...p,\n        [providerId]: value,\n      };\n    });\n  };\n\n  const unlink = async providerId => {\n    try {\n      if (auth.currentUser.providerData.length === 1) {\n        throw new Error(`You can not disconnect from ${providerId}`);\n      }\n\n      await auth.currentUser.unlink(providerId);\n      updateIsConnected(providerId, false);\n      Alert.info(`Disconnected from ${providerId}`, 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const unlinkFacebook = () => {\n    unlink('facebook.com');\n  };\n  const unlinkGoogle = () => {\n    unlink('google.com');\n  };\n\n  const link = async provider => {\n    try {\n      await auth.currentUser.linkWithPopup(provider);\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\n      updateIsConnected(provider.providerId, true);\n    } catch (err) {\n      Alert.error(err.message, 400);\n    }\n  };\n\n  const linkFacebook = () => {\n    link(new firebase.auth.FacebookAuthProvider());\n  };\n  const linkGoogle = () => {\n    link(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <div>\n      {isConnected['google.com'] && (\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\n          <Icon icon=\"google\" /> Connected\n        </Tag>\n      )}\n      {isConnected['facebook.com'] && (\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\n          <Icon icon=\"facebook\" /> Connected\n        </Tag>\n      )}\n\n      <div className=\"mt-2\">\n        {!isConnected['google.com'] && (\n          <Button block color=\"green\" onClick={linkGoogle}>\n            <Icon icon=\"google\" /> Link to Google\n          </Button>\n        )}\n\n        {!isConnected['facebook.com'] && (\n          <Button block color=\"blue\" onClick={linkFacebook}>\n            <Icon icon=\"facebook\" /> Link to Facebook\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderBlock;\n","import React from 'react';\nimport { Avatar } from 'rsuite';\nimport { getNameInitials } from '../misc/helpers';\n\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\n  return (\n    <Avatar circle {...avatarProps}>\n      {getNameInitials(name)}\n    </Avatar>\n  );\n};\n\nexport default ProfileAvatar;\n","import React, { useState, useRef } from 'react';\nimport { Modal, Button, Alert } from 'rsuite';\nimport AvatarEditor from 'react-avatar-editor';\nimport { useModalState } from '../../misc/custom-hooks';\nimport { storage, database } from '../../misc/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport ProfileAvatar from '../ProfileAvatar';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst fileInputTypes = '.png, .jpeg, .jpg';\n\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\n\nconst getBlob = canvas => {\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject(new Error('File process error'));\n      }\n    });\n  });\n};\n\nconst AvatarUploadBtn = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const { profile } = useProfile();\n  const [img, setImg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const avatarEditorRef = useRef();\n\n  const onFileInputChange = ev => {\n    const currFiles = ev.target.files;\n\n    if (currFiles.length === 1) {\n      const file = currFiles[0];\n\n      if (isValidFile(file)) {\n        setImg(file);\n\n        open();\n      } else {\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\n      }\n    }\n  };\n\n  const onUploadClick = async () => {\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\n\n    setIsLoading(true);\n    try {\n      const blob = await getBlob(canvas);\n\n      const avatarFileRef = storage\n        .ref(`/profile/${profile.uid}`)\n        .child('avatar');\n\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\n      });\n\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\n\n      const updates = await getUserUpdates(\n        profile.uid,\n        'avatar',\n        downloadUrl,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      setIsLoading(false);\n      Alert.info('Avatar has been uploaded', 4000);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-3 text-center\">\n      <ProfileAvatar\n        src={profile.avatar}\n        name={profile.name}\n        className=\"width-200 height-200 img-fullsize font-huge\"\n      />\n\n      <div>\n        <label\n          htmlFor=\"avatar-upload\"\n          className=\"d-block cursor-pointer padded\"\n        >\n          Select new avatar\n          <input\n            id=\"avatar-upload\"\n            type=\"file\"\n            className=\"d-none\"\n            accept={fileInputTypes}\n            onChange={onFileInputChange}\n          />\n        </label>\n\n        <Modal show={isOpen} onHide={close}>\n          <Modal.Header>\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n              {img && (\n                <AvatarEditor\n                  ref={avatarEditorRef}\n                  image={img}\n                  width={200}\n                  height={200}\n                  border={10}\n                  borderRadius={100}\n                  rotate={0}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              block\n              appearance=\"ghost\"\n              onClick={onUploadClick}\n              disabled={isLoading}\n            >\n              Upload new avatar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarUploadBtn;\n","import React from 'react';\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\nimport { useProfile } from '../../context/profile.context';\nimport EditableInput from '../EditableInput';\nimport { database } from '../../misc/firebase';\nimport ProviderBlock from './ProviderBlock';\nimport AvatarUploadBtn from './AvatarUploadBtn';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst Dashboard = ({ onSignOut }) => {\n  const { profile } = useProfile();\n\n  const onSave = async newData => {\n    try {\n      const updates = await getUserUpdates(\n        profile.uid,\n        'name',\n        newData,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      Alert.success('Nickname has been updated', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n      <Drawer.Header>\n        <Drawer.Title>Dashboard</Drawer.Title>\n      </Drawer.Header>\n\n      <Drawer.Body>\n        <h3>Hey, {profile.name}</h3>\n        <ProviderBlock />\n        <Divider />\n        <EditableInput\n          name=\"nickname\"\n          initialValue={profile.name}\n          onSave={onSave}\n          label={<h6 className=\"mb-2\">Nickname</h6>}\n        />\n        <AvatarUploadBtn />\n      </Drawer.Body>\n\n      <Drawer.Footer>\n        <Button block color=\"red\" onClick={onSignOut}>\n          Sign out\n        </Button>\n      </Drawer.Footer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React, { useCallback } from 'react';\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\nimport Dashboard from '.';\nimport { auth, database } from '../../misc/firebase';\nimport { isOfflineForDatabase } from '../../context/profile.context';\n\nconst DashboardToggle = () => {\n  const { isOpen, close, open } = useModalState();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const onSignOut = useCallback(() => {\n    database\n      .ref(`/status/${auth.currentUser.uid}`)\n      .set(isOfflineForDatabase)\n      .then(() => {\n        auth.signOut();\n        Alert.info('Signed out', 4000);\n        close();\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  }, [close]);\n\n  return (\n    <>\n      <Button block color=\"blue\" onClick={open}>\n        <Icon icon=\"dashboard\" /> Dashboard\n      </Button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\n        <Dashboard onSignOut={onSignOut} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default DashboardToggle;\n","import React, { useState, useCallback, useRef } from 'react';\nimport {\n  Button,\n  Icon,\n  Modal,\n  Form,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Schema,\n  Alert,\n} from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useModalState } from '../misc/custom-hooks';\nimport { database, auth } from '../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  name: StringType().isRequired('Chat name is required'),\n  description: StringType().isRequired('Description is required'),\n});\n\nconst INITIAL_FORM = {\n  name: '',\n  description: '',\n};\n\nconst CreateRoomBtnModal = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    const newRoomdata = {\n      ...formValue,\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\n      admins: {\n        [auth.currentUser.uid]: true,\n      },\n      fcmUsers: {\n        [auth.currentUser.uid]: true,\n      },\n    };\n\n    try {\n      await database.ref('rooms').push(newRoomdata);\n\n      Alert.info(`${formValue.name} has been created`, 4000);\n\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-1\">\n      <Button block color=\"green\" onClick={open}>\n        <Icon icon=\"creative\" /> Create new chat room\n      </Button>\n\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>New chat room</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Room name</ControlLabel>\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Description</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"description\"\n                placeholder=\"Enter room description...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Create new chat room\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateRoomBtnModal;\n","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport ProfileAvatar from '../ProfileAvatar';\n\nconst RoomItem = ({ room }) => {\n  const { createdAt, name, lastMessage } = room;\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h3 className=\"text-disappear\">{name}</h3>\n        <TimeAgo\n          datetime={\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\n          }\n          className=\"font-normal text-black-45\"\n        />\n      </div>\n\n      <div className=\"d-flex align-items-center text-black-70\">\n        {lastMessage ? (\n          <>\n            <div className=\"d-flex align-items-center\">\n              <ProfileAvatar\n                src={lastMessage.author.avatar}\n                name={lastMessage.author.name}\n                size=\"sm\"\n              />\n            </div>\n\n            <div className=\"text-disappear ml-2\">\n              <div className=\"italic\">{lastMessage.author.name}</div>\n              <span>{lastMessage.text || lastMessage.file.name}</span>\n            </div>\n          </>\n        ) : (\n          <span>No messages yet...</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomItem;\n","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { database } from '../misc/firebase';\nimport { transformToArrWithId } from '../misc/helpers';\n\nconst RoomsContext = createContext();\n\nexport const RoomsProvider = ({ children }) => {\n  const [rooms, setRooms] = useState(null);\n\n  useEffect(() => {\n    const roomListRef = database.ref('rooms');\n\n    roomListRef.on('value', snap => {\n      const data = transformToArrWithId(snap.val());\n      setRooms(data);\n    });\n\n    return () => {\n      roomListRef.off();\n    };\n  }, []);\n\n  return (\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\n  );\n};\n\nexport const useRooms = () => useContext(RoomsContext);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Nav, Loader } from 'rsuite';\nimport RoomItem from './RoomItem';\nimport { useRooms } from '../../context/rooms.context';\n\nconst ChatRoomList = ({ aboveElHeight }) => {\n  const rooms = useRooms();\n  const location = useLocation();\n\n  return (\n    <Nav\n      appearance=\"subtle\"\n      vertical\n      reversed\n      className=\"overflow-y-scroll custom-scroll\"\n      style={{\n        height: `calc(100% - ${aboveElHeight}px)`,\n      }}\n      activeKey={location.pathname}\n    >\n      {!rooms && (\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\n      )}\n      {rooms &&\n        rooms.length > 0 &&\n        rooms.map(room => (\n          <Nav.Item\n            componentClass={Link}\n            to={`/chat/${room.id}`}\n            key={room.id}\n            eventKey={`/chat/${room.id}`}\n          >\n            <RoomItem room={room} />\n          </Nav.Item>\n        ))}\n    </Nav>\n  );\n};\n\nexport default ChatRoomList;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Divider } from 'rsuite';\nimport DashboardToggle from './dashboard/DashboardToggle';\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\nimport ChatRoomList from './rooms/ChatRoomList';\n\nconst Sidebar = () => {\n  const topSidebarRef = useRef();\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (topSidebarRef.current) {\n      setHeight(topSidebarRef.current.scrollHeight);\n    }\n  }, [topSidebarRef]);\n\n  return (\n    <div className=\"h-100 pt-2\">\n      <div ref={topSidebarRef}>\n        <DashboardToggle />\n        <CreateRoomBtnModal />\n        <Divider>Join conversation</Divider>\n      </div>\n      <ChatRoomList aboveElHeight={height} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\n\nconst CurrentRoomContext = createContext();\n\nexport const CurrentRoomProvider = ({ children, data }) => {\n  return (\n    <CurrentRoomContext.Provider value={data}>\n      {children}\n    </CurrentRoomContext.Provider>\n  );\n};\n\nexport const useCurrentRoom = selector =>\n  useContextSelector(CurrentRoomContext, selector);\n","import React, { memo } from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst RoomInfoBtnModal = () => {\n  const { isOpen, close, open } = useModalState();\n  const description = useCurrentRoom(v => v.description);\n  const name = useCurrentRoom(v => v.name);\n\n  return (\n    <>\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\n        Room information\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>About {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6 className=\"mb-1\">Description</h6>\n          <p>{description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default memo(RoomInfoBtnModal);\n","import React, { memo } from 'react';\nimport { Button, Drawer, Alert } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\nimport EditableInput from '../../EditableInput';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { database } from '../../../misc/firebase';\n\nconst EditRoomBtnDrawer = () => {\n  const { isOpen, open, close } = useModalState();\n  const { chatId } = useParams();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const name = useCurrentRoom(v => v.name);\n  const description = useCurrentRoom(v => v.description);\n\n  const updateData = (key, value) => {\n    database\n      .ref(`rooms/${chatId}`)\n      .child(key)\n      .set(value)\n      .then(() => {\n        Alert.success('Successfully updated', 4000);\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  };\n\n  const onNameSave = newName => {\n    updateData('name', newName);\n  };\n\n  const onDescriptionSave = newDesc => {\n    updateData('description', newDesc);\n  };\n\n  return (\n    <>\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\n        A\n      </Button>\n\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\n        <Drawer.Header>\n          <Drawer.Title>Edit Room</Drawer.Title>\n        </Drawer.Header>\n        <Drawer.Body>\n          <EditableInput\n            initialValue={name}\n            onSave={onNameSave}\n            label={<h6 className=\"mb-2\">Name</h6>}\n            emptyMsg=\"Name can not be empty\"\n          />\n          <EditableInput\n            componentClass=\"textarea\"\n            rows={5}\n            initialValue={description}\n            onSave={onDescriptionSave}\n            emptyMsg=\"Description can not be empty\"\n            wrapperClassName=\"mt-3\"\n          />\n        </Drawer.Body>\n        <Drawer.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </>\n  );\n};\n\nexport default memo(EditRoomBtnDrawer);\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport {\n  Button,\n  Icon,\n  Modal,\n  Form,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Schema,\n  Alert,\n} from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { functions } from '../../../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  title: StringType().isRequired('Title is required'),\n  message: StringType().isRequired('Message body is required'),\n});\n\nconst INITIAL_FORM = {\n  title: '',\n  message: '',\n};\n\nconst SendFcmBtnModal = () => {\n  const { chatId } = useParams();\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n  const [isLoading, setIsLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setFormValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const sendFcm = functions.httpsCallable('sendFcm');\n      await sendFcm({ chatId, ...formValue });\n\n      setIsLoading(false);\n      setFormValue(INITIAL_FORM);\n      close();\n\n      Alert.info('Notification has been sent', 7000);\n    } catch (error) {\n      Alert.error(error.message, 7000);\n    }\n  };\n\n  return (\n    <>\n      <Button appearance=\"primary\" size=\"xs\" onClick={open}>\n        <Icon icon=\"podcast\" /> Broadcast message\n      </Button>\n\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Send notification to room users</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Title</ControlLabel>\n              <FormControl name=\"title\" placeholder=\"Enter message title...\" />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Message</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"message\"\n                placeholder=\"Enter notification message...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Publish message\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default SendFcmBtnModal;\n","import React from 'react';\nimport { IconButton, Icon, Modal, Button } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { database, auth } from '../../../misc/firebase';\n\nconst AskFcmBtnModal = () => {\n  const { chatId } = useParams();\n  const isReceivingFcm = useCurrentRoom(v => v.isReceivingFcm);\n  const { isOpen, close, open } = useModalState();\n\n  const onAccept = () => {\n    database\n      .ref(`/rooms/${chatId}/fcmUsers`)\n      .child(auth.currentUser.uid)\n      .set(true);\n  };\n\n  const onCancel = () => {\n    database\n      .ref(`/rooms/${chatId}/fcmUsers`)\n      .child(auth.currentUser.uid)\n      .remove();\n  };\n\n  return (\n    <>\n      <IconButton\n        icon={<Icon icon=\"podcast\" />}\n        color=\"blue\"\n        size=\"sm\"\n        circle\n        appearance={isReceivingFcm ? 'default' : 'ghost'}\n        onClick={open}\n      />\n\n      <Modal show={isOpen} onHide={close} size=\"xs\" backdrop=\"static\">\n        <Modal.Header>\n          <Modal.Title>Notifications permission</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {isReceivingFcm ? (\n            <div className=\"text-center\">\n              <Icon className=\"text-green mb-3\" icon=\"check-circle\" size=\"5x\" />\n              <h6>\n                You are subscribed to broadcast messages sent by admins of this\n                room.\n              </h6>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <Icon\n                className=\"text-blue mb-3\"\n                icon=\"question-circle\"\n                size=\"5x\"\n              />\n              <h6>\n                Do you want to subscribe to messages sent by admins of this\n                room?\n              </h6>\n            </div>\n          )}\n          <p className=\"mt-2\">\n            To receive notifications make sure you allow Notifactions in your\n            browser\n          </p>\n          <p>\n            Permission:{' '}\n            {Notification.permission === 'granted' ? (\n              <span className=\"text-green\">Granted</span>\n            ) : (\n              <span className=\"text-red\">Denied</span>\n            )}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          {isReceivingFcm ? (\n            <Button color=\"green\" onClick={onCancel}>\n              I changed my mind\n            </Button>\n          ) : (\n            <Button color=\"green\" onClick={onAccept}>\n              Yes, I do\n            </Button>\n          )}\n          <Button onClick={close}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AskFcmBtnModal;\n","import React, { memo } from 'react';\nimport { Icon, ButtonToolbar } from 'rsuite';\nimport { Link } from 'react-router-dom';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useMediaQuery } from '../../../misc/custom-hooks';\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\nimport SendFcmBtnModal from './SendFcmBtnModal';\nimport AskFcmBtnModal from './AskFcmBtnModal';\n\nconst Top = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h4 className=\"text-disappear d-flex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\n                : 'd-none'\n            }\n          />\n          <span className=\"text-disappear\">{name}</span>\n        </h4>\n\n        <ButtonToolbar className=\"ws-nowrap\">\n          <AskFcmBtnModal />\n          {isAdmin && <EditRoomBtnDrawer />}\n        </ButtonToolbar>\n      </div>\n\n      <div className=\"d-flex justify-content-between align-items-center\">\n        {isAdmin && <SendFcmBtnModal />}\n        <RoomInfoBtnModal />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Top);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport { storage } from '../../../misc/firebase';\n\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\n\nconst AttachmentBtnModal = ({ afterUpload }) => {\n  const { chatId } = useParams();\n  const { isOpen, close, open } = useModalState();\n\n  const [fileList, setFileList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChange = fileArr => {\n    const filtered = fileArr\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\n      .slice(0, 5);\n\n    setFileList(filtered);\n  };\n\n  const onUpload = async () => {\n    if (fileList.length === 0) {\n      Alert.error('no file is choosen!!!');\n    }\n    try {\n      const uploadPromises = fileList.map(f => {\n        return storage\n          .ref(`/chat/${chatId}`)\n          .child(Date.now() + f.name)\n          .put(f.blobFile, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n      });\n\n      const uploadSnapshots = await Promise.all(uploadPromises);\n\n      const shapePromises = uploadSnapshots.map(async snap => {\n        return {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n      });\n\n      const files = await Promise.all(shapePromises);\n\n      await afterUpload(files);\n\n      setIsLoading(false);\n      setFileList([]);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  return (\n    <>\n      <InputGroup.Button onClick={open}>\n        <Icon icon=\"attachment\" />\n      </InputGroup.Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Upload files</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Uploader\n            autoUpload={false}\n            action=\"\"\n            fileList={fileList}\n            onChange={onChange}\n            multiple\n            listType=\"picture-text\"\n            className=\"w-100\"\n            disabled={isLoading}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block disabled={isLoading || !!fileList} onClick={onUpload}>\n            Send to chat\n          </Button>\n          <div className=\"text-right mt-2\">\n            <small>* only files less than 5 mb are allowed</small>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttachmentBtnModal;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Icon, Alert } from 'rsuite';\nimport { ReactMic } from 'react-mic';\nimport { useParams } from 'react-router';\nimport { storage } from '../../../misc/firebase';\n\nconst AudioMsgBtn = ({ afterUpload }) => {\n  const { chatId } = useParams();\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const onClick = useCallback(() => {\n    setIsRecording(p => !p);\n  }, []);\n\n  const onUpload = useCallback(\n    async data => {\n      setIsUploading(true);\n      try {\n        const snap = await storage\n          .ref(`/chat/${chatId}`)\n          .child(`audio_${Date.now()}.mp3`)\n          .put(data.blob, {\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\n          });\n\n        const file = {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n\n        setIsUploading(false);\n        afterUpload([file]);\n      } catch (error) {\n        setIsUploading(false);\n        Alert.error(error.message);\n      }\n    },\n    [afterUpload, chatId]\n  );\n\n  return (\n    <InputGroup.Button\n      onClick={onClick}\n      disabled={isUploading}\n      className={isRecording ? 'animate-blink' : ''}\n    >\n      <Icon icon=\"microphone\" />\n      <ReactMic\n        record={isRecording}\n        className=\"d-none\"\n        onStop={onUpload}\n        mimeType=\"audio/mp3\"\n      />\n    </InputGroup.Button>\n  );\n};\n\nexport default AudioMsgBtn;\n","import React, { useState, useCallback } from 'react';\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useParams } from 'react-router';\nimport { useProfile } from '../../../context/profile.context';\nimport { database } from '../../../misc/firebase';\nimport AttachmentBtnModal from './AttachmentBtnModal';\nimport AudioMsgBtn from './AudioMsgBtn';\n\nfunction assembleMessage(profile, chatId) {\n  return {\n    roomId: chatId,\n    author: {\n      name: profile.name,\n      uid: profile.uid,\n      createdAt: profile.createdAt,\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\n    },\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\n    likeCount: 0,\n  };\n}\n\nconst Bottom = () => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { chatId } = useParams();\n  const { profile } = useProfile();\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onSendClick = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n\n    const msgData = assembleMessage(profile, chatId);\n    msgData.text = input;\n\n    const updates = {};\n\n    const messageId = database.ref('messages').push().key;\n\n    updates[`/messages/${messageId}`] = msgData;\n    updates[`/rooms/${chatId}/lastMessage`] = {\n      ...msgData,\n      msgId: messageId,\n    };\n\n    setIsLoading(true);\n    try {\n      await database.ref().update(updates);\n\n      setInput('');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message);\n    }\n  };\n\n  const onKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      onSendClick();\n    }\n  };\n\n  const afterUpload = useCallback(\n    async files => {\n      setIsLoading(true);\n\n      const updates = {};\n\n      files.forEach(file => {\n        const msgData = assembleMessage(profile, chatId);\n        msgData.file = file;\n\n        const messageId = database.ref('messages').push().key;\n\n        updates[`/messages/${messageId}`] = msgData;\n      });\n\n      const lastMsgId = Object.keys(updates).pop();\n\n      updates[`/rooms/${chatId}/lastMessage`] = {\n        ...updates[lastMsgId],\n        msgId: lastMsgId,\n      };\n\n      try {\n        await database.ref().update(updates);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        Alert.error(err.message);\n      }\n    },\n    [chatId, profile]\n  );\n\n  return (\n    <div>\n      <InputGroup>\n        <AttachmentBtnModal afterUpload={afterUpload} />\n        <AudioMsgBtn afterUpload={afterUpload} />\n        <Input\n          placeholder=\"Write a new message here...\"\n          value={input}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n        />\n\n        <InputGroup.Button\n          color=\"blue\"\n          appearance=\"primary\"\n          onClick={onSendClick}\n          disabled={isLoading}\n        >\n          <Icon icon=\"send\" />\n        </InputGroup.Button>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\nimport ProfileAvatar from '../../ProfileAvatar';\n\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\n  const { isOpen, close, open } = useModalState();\n\n  const { name, avatar, createdAt } = profile;\n\n  const shortName = profile.name.split(' ')[0];\n\n  const memberSince = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <>\n      <Button {...btnProps} onClick={open}>\n        {shortName}\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{shortName} profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <ProfileAvatar\n            src={avatar}\n            name={name}\n            className=\"width-200 height-200 img-fullsize font-huge\"\n          />\n\n          <h4 className=\"mt-2\">{name}</h4>\n\n          <p>Member since {memberSince}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          {children}\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileInfoBtnModal;\n","import React from 'react';\nimport { Whisper, Tooltip, Badge } from 'rsuite';\nimport { usePresence } from '../misc/custom-hooks';\n\nconst getColor = presence => {\n  if (!presence) {\n    return 'gray';\n  }\n\n  switch (presence.state) {\n    case 'online':\n      return 'green';\n    case 'offline':\n      return 'red';\n    default:\n      return 'gray';\n  }\n};\n\nconst getText = presence => {\n  if (!presence) {\n    return 'Unknown state';\n  }\n\n  return presence.state === 'online'\n    ? 'Online'\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\n};\n\nconst PresenceDot = ({ uid }) => {\n  const presence = usePresence(uid);\n\n  return (\n    <Whisper\n      placement=\"top\"\n      trigger=\"hover\"\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\n    >\n      <Badge\n        className=\"cursor-pointer\"\n        style={{ backgroundColor: getColor(presence) }}\n      />\n    </Whisper>\n  );\n};\n\nexport default PresenceDot;\n","import React from 'react';\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\n\nconst ConditionalBadge = ({ condition, children }) => {\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\n};\n\nconst IconBtnControl = ({\n  isVisible,\n  iconName,\n  tooltip,\n  onClick,\n  badgeContent,\n  ...props\n}) => {\n  return (\n    <div\n      className=\"ml-2\"\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\n    >\n      <ConditionalBadge condition={badgeContent}>\n        <Whisper\n          placement=\"top\"\n          delay={0}\n          delayHide={0}\n          delayShow={0}\n          trigger=\"hover\"\n          speaker={<Tooltip>{tooltip}</Tooltip>}\n        >\n          <IconButton\n            {...props}\n            onClick={onClick}\n            circle\n            size=\"xs\"\n            icon={<Icon icon={iconName} />}\n          />\n        </Whisper>\n      </ConditionalBadge>\n    </div>\n  );\n};\n\nexport default IconBtnControl;\n","import React from 'react';\nimport { Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/custom-hooks';\n\nconst ImgBtnModal = ({ src, fileName }) => {\n  const { isOpen, open, close } = useModalState();\n\n  return (\n    <>\n      <input\n        type=\"image\"\n        src={src}\n        alt=\"file\"\n        onClick={open}\n        className=\"mw-100 mh-100 w-auto\"\n      />\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{fileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n            View original\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImgBtnModal;\n","import React, { memo } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { Button } from 'rsuite';\nimport ProfileAvatar from '../../ProfileAvatar';\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\nimport PresenceDot from '../../PresenceDot';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { auth } from '../../../misc/firebase';\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\nimport IconBtnControl from './IconBtnControl';\nimport ImgBtnModal from './ImgBtnModal';\n\nconst renderFileMessage = file => {\n  if (file.contentType.includes('image')) {\n    return (\n      <div className=\"height-220\">\n        <ImgBtnModal src={file.url} fileName={file.name} />\n      </div>\n    );\n  }\n\n  if (file.contentType.includes('audio')) {\n    return (\n      // eslint-disable-next-line jsx-a11y/media-has-caption\n      <audio controls>\n        <source src={file.url} type=\"audio/mp3\" />\n        Your browser does not support the audio element.\n      </audio>\n    );\n  }\n\n  return <a href={file.url}>Download {file.name}</a>;\n};\n\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\n  const { author, createdAt, text, file, likes, likeCount } = message;\n\n  const [selfRef, isHovered] = useHover();\n  const isMobile = useMediaQuery('(max-width: 992px)');\n\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const admins = useCurrentRoom(v => v.admins);\n\n  const isMsgAuthorAdmin = admins.includes(author.uid);\n  const isAuthor = auth.currentUser.uid === author.uid;\n  const canGrantAdmin = isAdmin && !isAuthor;\n\n  const canShowIcons = isMobile || isHovered;\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\n\n  return (\n    <li\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\n      ref={selfRef}\n    >\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\n        <PresenceDot uid={author.uid} />\n\n        <ProfileAvatar\n          src={author.avatar}\n          name={author.name}\n          className=\"ml-1\"\n          size=\"xs\"\n        />\n\n        <ProfileInfoBtnModal\n          profile={author}\n          appearance=\"link\"\n          className=\"p-0 ml-1 text-black\"\n        >\n          {canGrantAdmin && (\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\n              {isMsgAuthorAdmin\n                ? 'Remove admin permission'\n                : 'Give admin in this room'}\n            </Button>\n          )}\n        </ProfileInfoBtnModal>\n        <TimeAgo\n          datetime={createdAt}\n          className=\"font-normal text-black-45 ml-2\"\n        />\n\n        <IconBtnControl\n          {...(isLiked ? { color: 'red' } : {})}\n          isVisible={canShowIcons}\n          iconName=\"heart\"\n          tooltip=\"Like this message\"\n          onClick={() => handleLike(message.id)}\n          badgeContent={likeCount}\n        />\n        {isAuthor && (\n          <IconBtnControl\n            isVisible={canShowIcons}\n            iconName=\"close\"\n            tooltip=\"Delete this message\"\n            onClick={() => handleDelete(message.id, file)}\n          />\n        )}\n      </div>\n\n      <div>\n        {text && <span className=\"word-breal-all\">{text}</span>}\n        {file && renderFileMessage(file)}\n      </div>\n    </li>\n  );\n};\n\nexport default memo(MessageItem);\n","/* eslint-disable consistent-return */\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button } from 'rsuite';\nimport { database, auth, storage } from '../../../misc/firebase';\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\nimport MessageItem from './MessageItem';\n\nconst PAGE_SIZE = 15;\nconst messagesRef = database.ref('/messages');\n\nfunction shouldScrollToBottom(node, threshold = 30) {\n  const percentage =\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\n\n  return percentage > threshold;\n}\n\nconst Messages = () => {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [limit, setLimit] = useState(PAGE_SIZE);\n  const selfRef = useRef();\n\n  const isChatEmpty = messages && messages.length === 0;\n  const canShowMessages = messages && messages.length > 0;\n\n  const loadMessages = useCallback(\n    limitToLast => {\n      const node = selfRef.current;\n\n      messagesRef.off();\n\n      messagesRef\n        .orderByChild('roomId')\n        .equalTo(chatId)\n        .limitToLast(limitToLast || PAGE_SIZE)\n        .on('value', snap => {\n          const data = transformToArrWithId(snap.val());\n          setMessages(data);\n\n          if (shouldScrollToBottom(node)) {\n            node.scrollTop = node.scrollHeight;\n          }\n        });\n\n      setLimit(p => p + PAGE_SIZE);\n    },\n    [chatId]\n  );\n\n  const onLoadMore = useCallback(() => {\n    const node = selfRef.current;\n    const oldHeight = node.scrollHeight;\n\n    loadMessages(limit);\n\n    setTimeout(() => {\n      const newHeight = node.scrollHeight;\n      node.scrollTop = newHeight - oldHeight;\n    }, 200);\n  }, [loadMessages, limit]);\n\n  useEffect(() => {\n    const node = selfRef.current;\n\n    loadMessages();\n\n    setTimeout(() => {\n      node.scrollTop = node.scrollHeight;\n    }, 200);\n\n    return () => {\n      messagesRef.off('value');\n    };\n  }, [loadMessages]);\n\n  const handleAdmin = useCallback(\n    async uid => {\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\n\n      let alertMsg;\n\n      await adminsRef.transaction(admins => {\n        if (admins) {\n          if (admins[uid]) {\n            admins[uid] = null;\n            alertMsg = 'Admin permission removed';\n          } else {\n            admins[uid] = true;\n            alertMsg = 'Admin permission granted';\n          }\n        }\n\n        return admins;\n      });\n\n      Alert.info(alertMsg, 4000);\n    },\n    [chatId]\n  );\n\n  const handleLike = useCallback(async msgId => {\n    const { uid } = auth.currentUser;\n    const messageRef = database.ref(`/messages/${msgId}`);\n\n    let alertMsg;\n\n    await messageRef.transaction(msg => {\n      if (msg) {\n        if (msg.likes && msg.likes[uid]) {\n          msg.likeCount -= 1;\n          msg.likes[uid] = null;\n          alertMsg = 'Like removed';\n        } else {\n          msg.likeCount += 1;\n\n          if (!msg.likes) {\n            msg.likes = {};\n          }\n\n          msg.likes[uid] = true;\n          alertMsg = 'Like added';\n        }\n      }\n\n      return msg;\n    });\n\n    Alert.info(alertMsg, 4000);\n  }, []);\n\n  const handleDelete = useCallback(\n    async (msgId, file) => {\n      // eslint-disable-next-line no-alert\n      if (!window.confirm('Delete this message?')) {\n        return;\n      }\n\n      const isLast = messages[messages.length - 1].id === msgId;\n\n      const updates = {};\n\n      updates[`/messages/${msgId}`] = null;\n\n      if (isLast && messages.length > 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = {\n          ...messages[messages.length - 2],\n          msgId: messages[messages.length - 2].id,\n        };\n      }\n\n      if (isLast && messages.length === 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = null;\n      }\n\n      try {\n        await database.ref().update(updates);\n\n        Alert.info('Message has been deleted');\n      } catch (err) {\n        return Alert.error(err.message);\n      }\n\n      if (file) {\n        try {\n          const fileRef = storage.refFromURL(file.url);\n          await fileRef.delete();\n        } catch (err) {\n          Alert.error(err.message);\n        }\n      }\n    },\n    [chatId, messages]\n  );\n\n  const renderMessages = () => {\n    const groups = groupBy(messages, item =>\n      new Date(item.createdAt).toDateString()\n    );\n\n    const items = [];\n\n    Object.keys(groups).forEach(date => {\n      items.push(\n        <li key={date} className=\"text-center mb-1 padded\">\n          {date}\n        </li>\n      );\n\n      const msgs = groups[date].map(msg => (\n        <MessageItem\n          key={msg.id}\n          message={msg}\n          handleAdmin={handleAdmin}\n          handleLike={handleLike}\n          handleDelete={handleDelete}\n        />\n      ));\n\n      items.push(...msgs);\n    });\n\n    return items;\n  };\n\n  return (\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\n      {messages && messages.length >= PAGE_SIZE && (\n        <li className=\"text-center mt-2 mb-2\">\n          <Button onClick={onLoadMore} color=\"green\">\n            Load more\n          </Button>\n        </li>\n      )}\n      {isChatEmpty && <li>No messages yet</li>}\n      {canShowMessages && renderMessages()}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Loader } from 'rsuite';\n\nimport ChatTop from '../../components/chat-window/top';\nimport ChatBottom from '../../components/chat-window/bottom';\nimport Messages from '../../components/chat-window/messages';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/current-room.context';\nimport { transformToArr } from '../../misc/helpers';\nimport { auth } from '../../misc/firebase';\n\nconst Chat = () => {\n  const { chatId } = useParams();\n\n  const rooms = useRooms();\n\n  if (!rooms) {\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\n  }\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!currentRoom) {\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = transformToArr(currentRoom.admins);\n  const fcmUsers = transformToArr(currentRoom.fcmUsers);\n  const isAdmin = admins.includes(auth.currentUser.uid);\n  const isReceivingFcm = fcmUsers.includes(auth.currentUser.uid);\n\n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n    isReceivingFcm,\n  };\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chat-top\">\n        <ChatTop />\n      </div>\n      <div className=\"chat-middle\">\n        <Messages />\n      </div>\n      <div className=\"chat-bottom\">\n        <ChatBottom />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Grid, Row, Col } from 'rsuite';\nimport { Switch, Route, useRouteMatch } from 'react-router';\nimport Sidebar from '../../components/Sidebar';\nimport { RoomsProvider } from '../../context/rooms.context';\nimport Chat from './Chat';\nimport { useMediaQuery } from '../../misc/custom-hooks';\n\nconst Home = () => {\n  const isDesktop = useMediaQuery('(min-width: 992px)');\n  const { isExact } = useRouteMatch();\n\n  const canRenderSidebar = isDesktop || isExact;\n\n  return (\n    <RoomsProvider>\n      <Grid fluid className=\"h-100\">\n        <Row className=\"h-100\">\n          {canRenderSidebar && (\n            <Col xs={24} md={8} className=\"h-100\">\n              <Sidebar />\n            </Col>\n          )}\n\n          <Switch>\n            <Route exact path=\"/chat/:chatId\">\n              <Col xs={24} md={16} className=\"h-100\">\n                <Chat />\n              </Col>\n            </Route>\n            <Route>\n              {isDesktop && (\n                <Col xs={24} md={16} className=\"h-100\">\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\n                </Col>\n              )}\n            </Route>\n          </Switch>\n        </Row>\n      </Grid>\n    </RoomsProvider>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nconst PublicRoute = ({ children, ...routeProps }) => {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (profile && !isLoading) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n};\n\nexport default PublicRoute;\n","/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import React, { lazy, Suspense } from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport { Switch } from 'react-router';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/Home';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\nimport { ErrorBoundary } from './components/ErrorBoundary';\n\nconst SignIn = lazy(() => import('./pages/SignIn'));\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <ProfileProvider>\n        <Switch>\n          <PublicRoute path=\"/signin\">\n            <Suspense fallback={<div>Loading...</div>}>\n              <SignIn />\n            </Suspense>\n          </PublicRoute>\n          <PrivateRoute path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </ProfileProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","import { Notification as Toast } from 'rsuite';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport 'firebase/messaging';\nimport 'firebase/functions';\nimport { isLocalhost } from './helpers';\n\nconst config = {\n  apiKey: 'AIzaSyDLQOk87ZgE6Kk-HcGLRbZXfEixTVdeXss',\n  authDomain: 'chat-app-262f4.firebaseapp.com',\n  databaseURL: 'https://chat-app-262f4.firebaseio.com',\n  projectId: 'chat-app-262f4',\n  storageBucket: 'chat-app-262f4.appspot.com',\n  messagingSenderId: '580771480498',\n  appId: '1:580771480498:web:b0ec51b7bf973c9e515aab',\n};\n\nconst app = firebase.initializeApp(config);\nexport const auth = app.auth();\nexport const database = app.database();\nexport const storage = app.storage();\nexport const functions = app.functions();\n\nexport const messaging = firebase.messaging.isSupported()\n  ? app.messaging()\n  : null;\n\nif (messaging) {\n  messaging.usePublicVapidKey(\n    // 'BLs_I-HQyrAuUJJh8H3U0vtHGhVhXLMqoVoomeNL90GMKm0-o7sSoN9CJYRiBAVz-Yi7ZAni8mKateJfDwodTnw'\n    'BFkqc2CCmb9sZQ4xDjR3YQYgpemB6uoQSY52d349DYaPufQRwSmdQ17ZEuiRJGEtVcCzrdcmXY4zqeVYPfQYsmE'\n  );\n\n  messaging.onMessage(({ notification }) => {\n    const { title, body } = notification;\n    Toast.info({ title, description: body, duration: 0 });\n  });\n}\n\nif (isLocalhost) {\n  functions.useFunctionsEmulator('http://localhost:5001');\n}\n"],"sourceRoot":""}